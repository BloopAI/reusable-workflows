name: Build&Push docker container image with SHA tag

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      tag:
        required: true
        type: string
      runner:
        required: false
        default: ubuntu-latest
        type: string
    secrets:
      awsAccountID:
        required: true
      awsRegion:
        required: true
      build-args:
        required: false
      slackBuildWebhook:
        required: true
      nodeAuthToken:
        required: false

jobs:
  build_and_push:
    runs-on: ${{ inputs.runner }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: checkout the files
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.awsAccountID }}:role/github-actions
          role-session-name: buildsession
          aws-region: ${{ secrets.awsRegion }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ inputs.tag }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }},mode=max
          build-args: |
           NODE_AUTH_TOKEN=${{ secrets.nodeAuthToken }}
           ${{ secrets.build-args }}
